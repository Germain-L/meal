openapi: 3.0.0
info:
  title: Meals API
  version: 1.0.0
  description: API for managing user accounts and authentication for the Meals service

servers:
  - url: https://meal-production.up.railway.app
    description: Production server
  - url: http://localhost:8080
    description: Local development server

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        username:
          type: string
          example: "johndoe"
        email:
          type: string
          format: email
          example: "john@example.com"
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T00:00:00Z"
      required:
        - id
        - username
        - email
        - created_at

    LoginRequest:
      type: object
      properties:
        username:
          type: string
          example: "johndoe"
        password:
          type: string
          format: password
          example: "securepassword123"
      required:
        - username
        - password

    SignupRequest:
      type: object
      properties:
        username:
          type: string
          example: "johndoe"
        email:
          type: string
          format: email
          example: "john@example.com"
        password:
          type: string
          format: password
          example: "securepassword123"
      required:
        - username
        - email
        - password

    RefreshRequest:
      type: object
      properties:
        refresh_token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIs..."
      required:
        - refresh_token

    HealthResponse:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
          example: "healthy"
        error:
          type: string
          example: "database connection failed"

    PingResponse:
      type: object
      properties:
        message:
          type: string
          example: "pong"

    Error:
      type: object
      properties:
        error:
          type: string
          example: "Invalid credentials"

  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token obtained from login endpoint

paths:
  /signup:
    post:
      summary: Create a new user account
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
      responses:
        '200':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: Authenticate user and get tokens
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successfully authenticated. Tokens are set as HTTP-only cookies.
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /refresh:
    post:
      summary: Get new access token using refresh token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: New access token generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIs..."
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /user:
    get:
      summary: Get current user account details
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        '200':
          description: User account details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /healthz:
    get:
      summary: Check service health
      tags:
        - System
      responses:
        '200':
          description: Service health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: Service unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /ping:
    get:
      summary: Simple ping endpoint
      tags:
        - System
      responses:
        '200':
          description: Pong response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PingResponse'

tags:
  - name: Authentication
    description: User authentication endpoints
  - name: User
    description: User account management
  - name: System
    description: System health and monitoring