/* tslint:disable */
/* eslint-disable */
/**
 * Meals API
 * API for managing user accounts and authentication for the Meals service
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from '../runtime';
import type { HealthResponse, PingResponse } from '../models/index';
import {
	HealthResponseFromJSON,
	HealthResponseToJSON,
	PingResponseFromJSON,
	PingResponseToJSON
} from '../models/index';

/**
 *
 */
export class SystemApi extends runtime.BaseAPI {
	/**
	 * Check service health
	 */
	async healthzGetRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction
	): Promise<runtime.ApiResponse<HealthResponse>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		const response = await this.request(
			{
				path: `/healthz`,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters
			},
			initOverrides
		);

		return new runtime.JSONApiResponse(response, (jsonValue) => HealthResponseFromJSON(jsonValue));
	}

	/**
	 * Check service health
	 */
	async healthzGet(
		initOverrides?: RequestInit | runtime.InitOverrideFunction
	): Promise<HealthResponse> {
		const response = await this.healthzGetRaw(initOverrides);
		return await response.value();
	}

	/**
	 * Simple ping endpoint
	 */
	async pingGetRaw(
		initOverrides?: RequestInit | runtime.InitOverrideFunction
	): Promise<runtime.ApiResponse<PingResponse>> {
		const queryParameters: any = {};

		const headerParameters: runtime.HTTPHeaders = {};

		const response = await this.request(
			{
				path: `/ping`,
				method: 'GET',
				headers: headerParameters,
				query: queryParameters
			},
			initOverrides
		);

		return new runtime.JSONApiResponse(response, (jsonValue) => PingResponseFromJSON(jsonValue));
	}

	/**
	 * Simple ping endpoint
	 */
	async pingGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PingResponse> {
		const response = await this.pingGetRaw(initOverrides);
		return await response.value();
	}
}
